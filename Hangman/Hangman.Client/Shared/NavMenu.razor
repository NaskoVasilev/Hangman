@inject ApplicationState State

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Hangman</a>
    <button class="navbar-toggler" @onclick="@ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="@ToggleNavMenu">
    <ul class="nav flex-column">
        @if (State.IsLoggedIn)
        {
            <li class="nav-item px-3 text-white">
                Welcome, @State.Username
            </li>
        }
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        @if (State.IsLoggedIn)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="wordCategory/create">
                    <span class="oi oi-plus" aria-hidden="true"></span> Create Word Category
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="logout">
                    <span class="oi oi-plus" aria-hidden="true"></span> Logout
                </NavLink>
            </li>
        }
        else
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="register">
                    <span class="oi oi-plus" aria-hidden="true"></span> Register
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-plus" aria-hidden="true"></span> Login
                </NavLink>
            </li>
        }
    </ul>
</div>

@code {
    bool collapseNavMenu = true;

    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitAsync()
    {
        await State.RestoreFromLocalStorage();
        State.OnUserDataChange += this.StateHasChanged;
    }
}
